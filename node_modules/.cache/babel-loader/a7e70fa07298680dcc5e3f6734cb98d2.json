{"ast":null,"code":"var _jsxFileName = \"D:\\\\Curso\\\\reactjs-notas\\\\src\\\\pages\\\\notas\\\\new.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport Layout from \"../../components/Layout\";\nimport Loading from \"../../components/Loading\";\nimport { getAllStudentAndCycles, RegistrarNotaAPI } from \"../../helpers/notas\";\n\nconst NewNotaPage = () => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [students, setStudents] = useState(new Array());\n  const [cycles, setCycles] = useState(new Array());\n  const [nota, setNota] = useState({\n    writingnote: 0,\n    listeningnote: 0,\n    readingnote: 0,\n    speakingnote: 0,\n    middlexexamnote: 0,\n    finalexamnote: 0,\n    cycle_id: 0,\n    student_id: 0\n  });\n\n  const allStudentsAndCycles = () => {\n    getAllStudentAndCycles().then(res => {\n      setStudents(res.data.students);\n      setCycles(res.data.cycles);\n    }).catch(error => {\n      toast.error(error.response ? error.response.data.message : \"Error de Servidor\");\n    });\n  };\n\n  const isValid = () => {\n    if (nota.student_id === 0) {\n      toast.warn(\"Asigne un Estudiante\");\n      return false;\n    } else if (nota.cycle_id === 0) {\n      toast.warn(\"Asigne un Ciclo\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (isValid()) {\n      setLoading(true);\n      RegistrarNotaAPI(nota).then(res => {\n        toast.success(res.data.message);\n        history.push(\"/notes\");\n        setLoading(false);\n      }).catch(error => {\n        toast.error(error.response ? error.response.data.message : \"Error de Servidor\");\n        setLoading(false);\n      });\n    }\n  };\n\n  useEffect(() => {\n    const init = () => {\n      allStudentsAndCycles();\n    };\n\n    init();\n  }, []);\n  return /*#__PURE__*/React.createElement(Layout, {\n    text: \"Ciclos\",\n    head: \"Creaci\\xF3n de Nota\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leading-loose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-4xl py-0 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"Registrar Nota\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"max-w-xl m-4 p-10 bg-red-400 rounded shadow-xl container mx-auto\",\n    onSubmit: onSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Estudiante\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    id: \"grid-state\",\n    onChange: e => setNota({ ...nota,\n      student_id: Number(e.target.value)\n    }),\n    value: nota.student_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 19\n    }\n  }, \"Seleccionar Alumno\"), students.map(student => /*#__PURE__*/React.createElement(\"option\", {\n    key: student.id,\n    value: student.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 23\n    }\n  }, `${student.name} ${student.lastname} - ${student.university_id ? student.university_id : 'Externo'}`))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"fill-current h-4 w-4\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 15\n    }\n  }, \"Ciclo\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    id: \"grid-state\",\n    onChange: e => setNota({ ...nota,\n      cycle_id: Number(e.target.value)\n    }),\n    value: nota.cycle_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }\n  }, \"Seleccionar Ciclo\"), cycles.map(cycle => /*#__PURE__*/React.createElement(\"option\", {\n    key: cycle.id,\n    value: cycle.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 23\n    }\n  }, `${cycle.schedule.language.name} ${cycle.schedule.language.level} ${cycle.name}`, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"fill-current h-4 w-4\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 15\n    }\n  }, \"Nota Listening\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\",\n    id: \"listening\",\n    name: \"listening\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      listeningnote: Number(e.target.value)\n    }) //value={nota.listeningnote}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, \"Nota Reading\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\",\n    id: \"reading\",\n    name: \"reading\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      readingnote: Number(e.target.value)\n    }) //value={nota.readingnote}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 15\n    }\n  }, \"Nota Speaking\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\",\n    id: \"speaking\",\n    name: \"speaking\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      speakingnote: Number(e.target.value)\n    }) //value={nota.speakingnote}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, \"Nota Middle Exam\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\",\n    id: \"middle\",\n    name: \"middle\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      middlexexamnote: Number(e.target.value)\n    }) //value={nota.middlexexamnote}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, \"Nota Writting\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\",\n    id: \"writting\",\n    name: \"writting\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      writingnote: Number(e.target.value)\n    }) //value={nota.writingnote}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }, \"Nota Final Exam\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\",\n    id: \"final\",\n    name: \"final\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      finalexamnote: Number(e.target.value)\n    }) //value={nota.finalexamnote}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-black hover:bg-gray-800 font-light tracking-wider text-white font-bold py-1 px-4 rounded inline-flex items-center\",\n    onClick: () => history.push(\"/notes\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }\n  }, \"Volver\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-black hover:bg-gray-800 text-white font-bold py-1 px-4 mx-4 rounded inline-flex items-center\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 15\n    }\n  }, \"Registrar\")))));\n};\n\nexport default NewNotaPage;","map":{"version":3,"sources":["D:/Curso/reactjs-notas/src/pages/notas/new.tsx"],"names":["React","useEffect","useState","useHistory","toast","Layout","Loading","getAllStudentAndCycles","RegistrarNotaAPI","NewNotaPage","history","loading","setLoading","students","setStudents","Array","cycles","setCycles","nota","setNota","writingnote","listeningnote","readingnote","speakingnote","middlexexamnote","finalexamnote","cycle_id","student_id","allStudentsAndCycles","then","res","data","catch","error","response","message","isValid","warn","onSubmit","e","preventDefault","success","push","init","Number","target","value","map","student","id","name","lastname","university_id","cycle","schedule","language","level"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { ICycle } from \"../../interfaces/ICycle\";\r\nimport { IStudent } from \"../../interfaces/IStudent\";\r\nimport {ICreateNote} from \"../../interfaces/INotas\";\r\nimport {getAllStudentAndCycles, RegistrarNotaAPI} from \"../../helpers/notas\";\r\n\r\nconst NewNotaPage = () => {\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [students, setStudents] = useState(new Array<IStudent>());\r\n  const [cycles, setCycles] = useState(new Array<ICycle>());\r\n  const [nota, setNota] = useState<ICreateNote>({\r\n    writingnote: 0,\r\n    listeningnote: 0,\r\n    readingnote: 0,\r\n    speakingnote: 0,\r\n    middlexexamnote: 0,\r\n    finalexamnote: 0,\r\n    cycle_id: 0,\r\n    student_id: 0,\r\n  });\r\n\r\n  const allStudentsAndCycles = () => {\r\n    getAllStudentAndCycles()\r\n      .then((res) => {\r\n        setStudents(res.data.students);\r\n        setCycles(res.data.cycles);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\r\n          error.response ? error.response.data.message : \"Error de Servidor\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const isValid = (): boolean => {\r\n    if (nota.student_id === 0) {\r\n      toast.warn(\"Asigne un Estudiante\");\r\n      return false;\r\n    } else if (nota.cycle_id === 0) {\r\n      toast.warn(\"Asigne un Ciclo\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    if (isValid()) {\r\n      setLoading(true);\r\n      RegistrarNotaAPI(nota)\r\n        .then((res) => {\r\n          toast.success(res.data.message);\r\n          history.push(\"/notes\");\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          toast.error(\r\n            error.response ? error.response.data.message : \"Error de Servidor\"\r\n          );\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const init = () => {\r\n      allStudentsAndCycles();\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n      <Layout text=\"Ciclos\" head=\"Creación de Nota\">\r\n        <Loading loading={loading} />\r\n        <div className=\"leading-loose\">\r\n          <h1 className=\"text-4xl py-0 text-center\">Registrar Nota</h1>\r\n\r\n          <form\r\n              className=\"max-w-xl m-4 p-10 bg-red-400 rounded shadow-xl container mx-auto\"\r\n              onSubmit={onSubmit}\r\n              noValidate\r\n          >\r\n\r\n              <div className=\"mt-2\">\r\n              <label className=\"block text-sm text-gray-00\">Estudiante</label>\r\n              <div className=\"relative\">\r\n                <select\r\n                    className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n                    id=\"grid-state\"\r\n                    onChange={(e: any) =>\r\n                        setNota({\r\n                          ...nota,\r\n                          student_id: Number(e.target.value),\r\n                        })\r\n                    }\r\n                    value={nota.student_id}\r\n                >\r\n                  <option value={0}>Seleccionar Alumno</option>\r\n                  {students.map((student) => (\r\n                      <option\r\n                          key={student.id}\r\n                          value={student.id}\r\n                      >{`${student.name} ${student.lastname} - ${student.university_id ? student.university_id : 'Externo'}`}</option>\r\n                  ))}\r\n                </select>\r\n                <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                  <svg\r\n                      className=\"fill-current h-4 w-4\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 20 20\"\r\n                  >\r\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-2\">\r\n              <label className=\"block text-sm text-gray-00\">Ciclo</label>\r\n              <div className=\"relative\">\r\n                <select\r\n                    className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n                    id=\"grid-state\"\r\n                    onChange={(e: any) =>\r\n                        setNota({\r\n                          ...nota,\r\n                          cycle_id: Number(e.target.value),\r\n                        })\r\n                    }\r\n                    value={nota.cycle_id}\r\n                >\r\n                  <option value={0}>Seleccionar Ciclo</option>\r\n                  {cycles.map((cycle) => (\r\n                      <option\r\n                          key={cycle.id}\r\n                          value={cycle.id}\r\n                      >{`${cycle.schedule.language.name} ${cycle.schedule.language.level} ${cycle.name}`} </option>\r\n                  ))}\r\n                </select>\r\n                <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                  <svg\r\n                      className=\"fill-current h-4 w-4\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 20 20\"\r\n                  >\r\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Listening</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                  id=\"listening\"\r\n                  name=\"listening\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        listeningnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.listeningnote}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Reading</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                  id=\"reading\"\r\n                  name=\"reading\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        readingnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.readingnote}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Speaking</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                  id=\"speaking\"\r\n                  name=\"speaking\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        speakingnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.speakingnote}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Middle Exam</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                  id=\"middle\"\r\n                  name=\"middle\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        middlexexamnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.middlexexamnote}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Writting</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                  id=\"writting\"\r\n                  name=\"writting\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        writingnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.writingnote}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Final Exam</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                  id=\"final\"\r\n                  name=\"final\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        finalexamnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.finalexamnote}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-4 text-center\">\r\n                <button\r\n                    className=\"bg-black hover:bg-gray-800 font-light tracking-wider text-white font-bold py-1 px-4 rounded inline-flex items-center\"\r\n                    onClick={() => history.push(\"/notes\")}\r\n                >\r\n                    Volver\r\n                </button>\r\n\r\n              <button\r\n                  className=\"bg-black hover:bg-gray-800 text-white font-bold py-1 px-4 mx-4 rounded inline-flex items-center\"\r\n                  type=\"submit\"\r\n              >\r\n                Registrar\r\n              </button>\r\n            </div>\r\n\r\n          </form>\r\n\r\n        </div>\r\n      </Layout>\r\n  );\r\n};\r\n\r\nexport default NewNotaPage;\r\n"]},"metadata":{},"sourceType":"module"}