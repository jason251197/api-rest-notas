{"ast":null,"code":"var _jsxFileName = \"D:\\\\Curso\\\\reactjs-notas\\\\src\\\\pages\\\\notas\\\\edit.tsx\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { actualizarNotaAPI, getAllStudentAndCycles, getNoteById } from \"../../helpers/notas\";\nimport { toast } from \"react-toastify\";\nimport Layout from \"../../components/Layout\";\nimport Loading from \"../../components/Loading\";\n\nconst EditPage = () => {\n  const history = useHistory();\n  const [loading, setLoading] = useState(false);\n  const [students, setStudents] = useState(new Array());\n  const [cycles, setCycles] = useState(new Array());\n  let {\n    id\n  } = useParams();\n  const [nota, setNota] = useState({\n    writingnote: 0,\n    listeningnote: 0,\n    readingnote: 0,\n    speakingnote: 0,\n    middlexexamnote: 0,\n    finalexamnote: 0,\n    cycle_id: 0,\n    student_id: 0\n  });\n\n  const loadList = () => {\n    setLoading(true);\n    getNoteById(id).then(res => {\n      setNota(res.data);\n      setLoading(false);\n    }).catch(error => {\n      toast.error(error.response ? error.response.data.message : \"Error de Servidor\");\n      setLoading(false);\n    });\n  };\n\n  const allStudentsAndCycles = () => {\n    getAllStudentAndCycles().then(res => {\n      setStudents(res.data.students);\n      setCycles(res.data.cycles);\n    }).catch(error => {\n      toast.error(error.response ? error.response.data.message : \"Error de Servidor\");\n    });\n  };\n\n  useEffect(() => {\n    const init = () => loadList();\n\n    init();\n    allStudentsAndCycles();\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (isValid()) {\n      setLoading(true);\n      actualizarNotaAPI(nota).then(res => {\n        toast.success(res.data.message);\n        history.push(\"/notes\");\n        setLoading(false);\n      }).catch(error => {\n        toast.error(error.response ? error.response.data.message : \"Error de Servidor\");\n        setLoading(false);\n      });\n    }\n  };\n\n  const isValid = () => {\n    if (nota.student_id === 0) {\n      toast.warn(\"Asigne un Estudiante\");\n      return false;\n    } else if (nota.cycle_id === 0) {\n      toast.warn(\"Asigne un Ciclo\");\n      return false;\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/React.createElement(Layout, {\n    text: \"Ciclos\",\n    head: \"Actualizar Nota\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Loading, {\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leading-loose\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-4xl py-0 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, \"Actualizar Nota\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"max-w-xl m-4 p-10 bg-red-400 rounded shadow-xl container mx-auto\",\n    onSubmit: onSubmit,\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 25\n    }\n  }, \"Estudiante\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    id: \"grid-state\",\n    \"aria-readonly\": true,\n    value: nota.student_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, \"Seleccionar Alumno\"), students.map(student => /*#__PURE__*/React.createElement(\"option\", {\n    key: student.id,\n    value: student.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 37\n    }\n  }, `${student.name} ${student.lastname} - ${student.university_id ? student.university_id : 'Externo'}`))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"fill-current h-4 w-4\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, \"Ciclo\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n    id: \"grid-state\",\n    \"aria-readonly\": true,\n    value: nota.cycle_id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 33\n    }\n  }, \"Seleccionar Ciclo\"), cycles.map(cycle => /*#__PURE__*/React.createElement(\"option\", {\n    key: cycle.id,\n    value: cycle.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 37\n    }\n  }, `${cycle.schedule.language.name} ${cycle.schedule.language.level} ${cycle.name}`, \" \"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"fill-current h-4 w-4\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 25\n    }\n  }, \"Nota Listening\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\",\n    id: \"listening\",\n    name: \"listening\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      listeningnote: Number(e.target.value)\n    }),\n    value: nota.listeningnote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, \"Nota Reading\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\",\n    id: \"reading\",\n    name: \"reading\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      readingnote: Number(e.target.value)\n    }),\n    value: nota.readingnote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, \"Nota Speaking\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\",\n    id: \"speaking\",\n    name: \"speaking\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      speakingnote: Number(e.target.value)\n    }),\n    value: nota.speakingnote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 25\n    }\n  }, \"Nota Middle Exam\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\",\n    id: \"middle\",\n    name: \"middle\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      middlexexamnote: Number(e.target.value)\n    }),\n    value: nota.middlexexamnote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, \"Nota Writting\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\",\n    id: \"writting\",\n    name: \"writting\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      writingnote: Number(e.target.value)\n    }),\n    value: nota.writingnote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block text-sm text-gray-00\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 25\n    }\n  }, \"Nota Final Exam\"), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\",\n    id: \"final\",\n    name: \"final\",\n    type: \"number\",\n    step: \"0.01\",\n    required: true,\n    onChange: e => setNota({ ...nota,\n      finalexamnote: Number(e.target.value)\n    }),\n    value: nota.finalexamnote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-black hover:bg-gray-800 font-light tracking-wider text-white font-bold py-1 px-4 rounded inline-flex items-center\",\n    onClick: () => history.push(\"/notes\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 25\n    }\n  }, \"Volver\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"bg-black hover:bg-gray-800 text-white font-bold py-1 px-4 mx-4 rounded inline-flex items-center\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 25\n    }\n  }, \"Actualizar\")))));\n};\n\nexport default EditPage;","map":{"version":3,"sources":["D:/Curso/reactjs-notas/src/pages/notas/edit.tsx"],"names":["useHistory","useParams","React","useEffect","useState","actualizarNotaAPI","getAllStudentAndCycles","getNoteById","toast","Layout","Loading","EditPage","history","loading","setLoading","students","setStudents","Array","cycles","setCycles","id","nota","setNota","writingnote","listeningnote","readingnote","speakingnote","middlexexamnote","finalexamnote","cycle_id","student_id","loadList","then","res","data","catch","error","response","message","allStudentsAndCycles","init","onSubmit","e","preventDefault","isValid","success","push","warn","map","student","name","lastname","university_id","cycle","schedule","language","level","Number","target","value"],"mappings":"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","sourcesContent":["import {useHistory, useParams} from \"react-router-dom\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {ICreateNote} from \"../../interfaces/INotas\";\r\nimport {\r\n    actualizarNotaAPI,\r\n    getAllStudentAndCycles,\r\n    getNoteById,\r\n} from \"../../helpers/notas\";\r\nimport {toast} from \"react-toastify\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Loading from \"../../components/Loading\";\r\nimport {IStudent} from \"../../interfaces/IStudent\";\r\nimport {ICycle} from \"../../interfaces/ICycle\";\r\n\r\nconst EditPage = () => {\r\n    const history = useHistory();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [students, setStudents] = useState(new Array<IStudent>());\r\n    const [cycles, setCycles] = useState(new Array<ICycle>());\r\n\r\n    let {id} = useParams();\r\n    const [nota, setNota] = useState<ICreateNote>({\r\n        writingnote: 0,\r\n        listeningnote: 0,\r\n        readingnote: 0,\r\n        speakingnote: 0,\r\n        middlexexamnote: 0,\r\n        finalexamnote: 0,\r\n        cycle_id: 0,\r\n        student_id: 0,\r\n    });\r\n\r\n    const loadList = () => {\r\n        setLoading(true);\r\n        getNoteById(id)\r\n            .then((res) => {\r\n                setNota(res.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                toast.error(\r\n                    error.response ? error.response.data.message : \"Error de Servidor\"\r\n                );\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const allStudentsAndCycles = () => {\r\n        getAllStudentAndCycles()\r\n            .then((res) => {\r\n                setStudents(res.data.students);\r\n                setCycles(res.data.cycles);\r\n            })\r\n            .catch((error) => {\r\n                toast.error(\r\n                    error.response ? error.response.data.message : \"Error de Servidor\"\r\n                );\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const init = () => loadList();\r\n        init();\r\n        allStudentsAndCycles();\r\n    }, []);\r\n\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        if (isValid()) {\r\n            setLoading(true);\r\n            actualizarNotaAPI(nota)\r\n                .then((res) => {\r\n                    toast.success(res.data.message);\r\n                    history.push(\"/notes\");\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    toast.error(\r\n                        error.response ? error.response.data.message : \"Error de Servidor\"\r\n                    );\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    const isValid = (): boolean => {\r\n        if (nota.student_id === 0) {\r\n            toast.warn(\"Asigne un Estudiante\");\r\n            return false;\r\n        } else if (nota.cycle_id === 0) {\r\n            toast.warn(\"Asigne un Ciclo\");\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <Layout text=\"Ciclos\" head=\"Actualizar Nota\">\r\n            <Loading loading={loading} />\r\n            <div className=\"leading-loose\">\r\n                <h1 className=\"text-4xl py-0 text-center\">Actualizar Nota</h1>\r\n\r\n                <form\r\n                    className=\"max-w-xl m-4 p-10 bg-red-400 rounded shadow-xl container mx-auto\"\r\n                    onSubmit={onSubmit}\r\n                    noValidate\r\n                >\r\n\r\n                    <div className=\"mt-2\">\r\n                        <label className=\"block text-sm text-gray-00\">Estudiante</label>\r\n                        <div className=\"relative\">\r\n                            <select\r\n                                className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n                                id=\"grid-state\"\r\n                                aria-readonly\r\n                                value={nota.student_id}\r\n                            >\r\n                                <option value={0}>Seleccionar Alumno</option>\r\n                                {students.map((student) => (\r\n                                    <option\r\n                                        key={student.id}\r\n                                        value={student.id}\r\n                                    >{`${student.name} ${student.lastname} - ${student.university_id ? student.university_id : 'Externo'}`}</option>\r\n                                ))}\r\n                            </select>\r\n                            <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                                <svg\r\n                                    className=\"fill-current h-4 w-4\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    viewBox=\"0 0 20 20\"\r\n                                >\r\n                                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-2\">\r\n                        <label className=\"block text-sm text-gray-00\">Ciclo</label>\r\n                        <div className=\"relative\">\r\n                            <select\r\n                                className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n                                id=\"grid-state\"\r\n                                aria-readonly\r\n                                value={nota.cycle_id}\r\n                            >\r\n                                <option value={0}>Seleccionar Ciclo</option>\r\n                                {cycles.map((cycle) => (\r\n                                    <option\r\n                                        key={cycle.id}\r\n                                        value={cycle.id}\r\n                                    >{`${cycle.schedule.language.name} ${cycle.schedule.language.level} ${cycle.name}`} </option>\r\n                                ))}\r\n                            </select>\r\n                            <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                                <svg\r\n                                    className=\"fill-current h-4 w-4\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    viewBox=\"0 0 20 20\"\r\n                                >\r\n                                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Listening</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                            id=\"listening\"\r\n                            name=\"listening\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    listeningnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.listeningnote}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Reading</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                            id=\"reading\"\r\n                            name=\"reading\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    readingnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.readingnote}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Speaking</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                            id=\"speaking\"\r\n                            name=\"speaking\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    speakingnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.speakingnote}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Middle Exam</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                            id=\"middle\"\r\n                            name=\"middle\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    middlexexamnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.middlexexamnote}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Writting</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                            id=\"writting\"\r\n                            name=\"writting\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    writingnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.writingnote}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Final Exam</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                            id=\"final\"\r\n                            name=\"final\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    finalexamnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.finalexamnote}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4 text-center\">\r\n                        <button\r\n                            className=\"bg-black hover:bg-gray-800 font-light tracking-wider text-white font-bold py-1 px-4 rounded inline-flex items-center\"\r\n                            onClick={() => history.push(\"/notes\")}\r\n                        >\r\n                            Volver\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"bg-black hover:bg-gray-800 text-white font-bold py-1 px-4 mx-4 rounded inline-flex items-center\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Actualizar\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default EditPage;\r\n"]},"metadata":{},"sourceType":"module"}