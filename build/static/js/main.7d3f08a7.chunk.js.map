{"version":3,"sources":["components/Layout.tsx","components/Loading.tsx","helpers/report.ts","config/axios.ts","helpers/notas.ts","pages/notas/index.tsx","pages/notas/new.tsx","pages/notas/edit.tsx","routers/NotaRoute.tsx","routers/AppRoute.tsx","index.tsx"],"names":["Layout","children","head","text","Helmet","className","Loading","loading","style","top","left","ReportPDF","report","doc","jsPDF","setFontSize","content","startY","headers","body","data","headStyles","halign","columnStyles","0","1","2","3","4","5","6","7","8","9","10","margin","title","autoTable","save","name","axios","create","baseURL","getAllStudentAndCycles","API","get","NotaPage","history","useHistory","useState","setLoading","Array","setData","loadList","then","res","catch","error","toast","response","message","a","notaData","map","nota","i","student","lastname","cycle","schedule","language","level","listeningnote","readingnote","speakingnote","middlexexamnote","writingnote","finalexamnote","Math","round","e","alert","useEffect","onClick","push","fontSize","key","id","NewNotaPage","students","setStudents","cycles","setCycles","cycle_id","student_id","setNota","onSubmit","newNota","preventDefault","warn","post","success","noValidate","onChange","Number","target","value","university_id","xmlns","viewBox","d","type","step","required","EditPage","useParams","noteId","isValid","put","aria-readonly","NotaRoute","path","useRouteMatch","exact","component","to","AppRoute","ReactDOM","render","autoClose","limit","closeOnClick","position","POSITION","BOTTOM_CENTER","transition","Zoom","document","getElementById"],"mappings":"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","file":"static/js/main.7d3f08a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { RouteProps } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport \"../styles/layout.css\";\r\n\r\ninterface ILayourRoutePropos extends RouteProps {\r\n  text: string;\r\n  head: string;\r\n}\r\n\r\nconst Layout = ({ children, text, head }: ILayourRoutePropos) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{head} - CEIDUNS</title>\r\n      </Helmet>\r\n      <div className=\"relative bg-gray-200 md:min-h-screen animate__animated animate__fadeIn animate__faster\">\r\n        <div className=\"relative bg-transparent md:pt-24 pb-6 pt-6 full-body\">\r\n          <div className=\"px-4 md:px-6 mx-auto w-full\">\r\n            <div>{children}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\n\r\nconst center = \"calc(50% - 29px)\";\r\n\r\nconst Loading = ({ loading }: { loading: boolean }) => {\r\n  return (\r\n    loading ? <div className=\"w-full h-full fixed block align-middle top-0 left-0 bg-white opacity-75 z-50\">\r\n    <span\r\n      className=\"text-green-500 opacity-75 block relative w-0 h-0\"\r\n      style={{ top: center, left: center }}\r\n    >\r\n      <div className=\"w-12 h-12 border-4 border-teal-600 rounded-full loader\"></div>\r\n    </span>\r\n  </div> : null\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import jsPDF from \"jspdf\";\r\nimport autoTable, { UserOptions } from \"jspdf-autotable\";\r\n\r\nexport interface IReport {\r\n  title: string;\r\n  headers: Array<string>;\r\n  data: Array<Array<Object>>;\r\n  name: string;\r\n}\r\n\r\nexport const ReportPDF = (report: IReport) => {\r\n  const unit = \"pt\";\r\n  const size = \"A4\";\r\n  const orientation = \"portrait\";\r\n\r\n  const marginLeft = 40;\r\n  const doc = new jsPDF(orientation, unit, size);\r\n\r\n  doc.setFontSize(15);\r\n\r\n  let content: UserOptions = {\r\n    startY: 50,\r\n    head: [report.headers],\r\n    body: report.data,\r\n    headStyles: { halign: \"center\"},\r\n    columnStyles: { 0: { halign: \"center\" }, 1: { halign: \"center\" }, 2: { halign: \"center\" }, 3: { halign: \"center\" }, 4: { halign: \"center\" }, 5: { halign: \"center\" }, 6: { halign: \"center\" }, 7: { halign: \"center\" }, 8: { halign: \"center\" }, 9: { halign: \"center\" }, 10: { halign: \"center\" }},\r\n    margin: { top: 10 },\r\n  };\r\n\r\n  doc.text(report.title, marginLeft, 40);\r\n  autoTable(doc, content);\r\n  doc.save(`${report.name}.pdf`);\r\n};\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n   baseURL: 'http://localhost:9191/'\r\n});\r\n","import API from \"../config/axios\";\r\nimport {ICreateNote} from \"../interfaces/INotas\";\r\n\r\nexport const ListNotaApi = (page: number) => {\r\n    return API.get(`notes/list/${page}`);\r\n}\r\n\r\nexport const AllNotesAPI = () => {\r\n    return API.get( `notes/all`);\r\n}\r\n\r\nexport const RegistrarNotaAPI = (newNota: ICreateNote) => {\r\n    return API.post(`notes/new`,newNota);\r\n}\r\n\r\nexport const getAllStudentAndCycles = () => {\r\n    return API.get(`notes/new`);\r\n}\r\n\r\nexport const getNoteById = (noteId: number) => {\r\n    return API.get(`notes/`+ noteId);\r\n}\r\n\r\nexport const actualizarNotaAPI = (newNota: ICreateNote) => {\r\n    return API.put(`notes/edit`,newNota);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { MdAdd, MdArrowDownward } from \"react-icons/md\";\r\n\r\nimport Layout from \"../../components/Layout\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { ReportPDF } from \"../../helpers/report\";\r\nimport {AllNotesAPI} from \"../../helpers/notas\";\r\nimport {INotas} from \"../../interfaces/INotas\";\r\n\r\nconst NotaPage = () => {\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState(new Array<INotas>());\r\n\r\n  const loadList = () => {\r\n    setLoading(true);\r\n    AllNotesAPI()\r\n      .then((res) => {\r\n        setData(res.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\r\n          error.response ? error.response.data.message : \"Error de Servidor\"\r\n        );\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const report = async () => {\r\n    try {\r\n      const notaData = data.map((nota: INotas, i:number) => [\r\n        i + 1,\r\n        `${nota.student.name} ${nota.student.lastname}`,\r\n        `${nota.cycle.schedule.language.name} ${nota.cycle.schedule.language.level}`,\r\n        `${nota.cycle.name}`,\r\n        nota.listeningnote,\r\n        nota.readingnote,\r\n        nota.speakingnote,\r\n        nota.middlexexamnote,\r\n        nota.writingnote,\r\n        nota.finalexamnote,\r\n        Math.round((nota.listeningnote+\r\n              nota.readingnote+\r\n              nota.speakingnote+\r\n              nota.middlexexamnote+\r\n              nota.writingnote+\r\n              nota.finalexamnote)/6),\r\n      ]);\r\n      const headers = [\r\n        \"#\",\r\n        \"Alumno\",\r\n        \"Idioma\",\r\n        \"Ciclo\",\r\n        \"Listening\",\r\n        \"Reading\",\r\n        \"Speaking\",\r\n        \"MiddleEx\",\r\n        \"Writting\",\r\n        \"FinalEx\",\r\n        \"Promedio\",\r\n      ];\r\n      ReportPDF({\r\n        title: \"Reporte de Notas\",\r\n        headers,\r\n        data: notaData,\r\n        name: \"notas\",\r\n      });\r\n    } catch (e) {\r\n      alert(\"ERROR\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const init = () => loadList();\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n      <Layout text=\"Nota\" head=\"Administración de Notas\">\r\n        <Loading loading={loading} />\r\n        <div className=\"container mx-auto\">\r\n\r\n          <h1 className=\"text-4xl py-4 mb-4\">Registro de Notas</h1>\r\n\r\n          <div className=\"text-center pb-4\">\r\n\r\n            <button\r\n                className=\"bg-blue-500 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\"\r\n                onClick={() => history.push(\"/notes/new\")}\r\n            >\r\n              <MdAdd style={{ fontSize: \"1.5em\" }} />\r\n              <span>Registrar Nota</span>\r\n            </button>\r\n\r\n            <button\r\n                className=\"bg-blue-500 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 mx-4 rounded inline-flex items-center\"\r\n                onClick={() => report()}\r\n            >\r\n              <MdArrowDownward style={{ fontSize: \"1.5em\" }} />\r\n              <span>Reporte General</span>\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"overflow-x-auto bg-white rounded-lg shadow overflow-y-auto relative\">\r\n\r\n            <table className=\"table border-collapse table-auto w-full whitespace-no-wrap table-striped  relative\">\r\n              <thead>\r\n              <tr className=\"text-center\">\r\n                <th className=\"bg-gray-100 sticky top-0 border-b border-gray-200 px-6 py-2 text-gray-800 font-bold tracking-wider uppercase text-xs bg-blue-300\">\r\n                  Alumno\r\n                </th>\r\n                <th className=\"bg-gray-100 sticky top-0 border-b border-gray-200 px-6 py-2 text-gray-800 font-bold tracking-wider uppercase text-xs bg-blue-300\">\r\n                  Idioma\r\n                </th>\r\n                <th className=\"bg-gray-100 sticky top-0 border-b border-gray-200 px-6 py-2 text-gray-800 font-bold tracking-wider uppercase text-xs bg-blue-300\">\r\n                  Ciclo\r\n                </th>\r\n                <th className=\"bg-gray-100 sticky top-0 border-b border-gray-200 px-6 py-2 text-gray-800 font-bold tracking-wider uppercase text-xs bg-blue-300\">\r\n                  Listening\r\n                </th>\r\n                <th className=\"bg-gray-100 sticky top-0 border-b border-gray-200 px-6 py-2 text-gray-800 font-bold tracking-wider uppercase text-xs bg-blue-300\">\r\n                  Reading\r\n                </th>\r\n                <th className=\"bg-gray-100 sticky top-0 border-b border-gray-200 px-6 py-2 text-gray-800 font-bold tracking-wider uppercase text-xs bg-blue-300\">\r\n                  Speaking\r\n                </th>\r\n                <th className=\"bg-gray-100 sticky top-0 border-b border-gray-200 px-6 py-2 text-gray-800 font-bold tracking-wider uppercase text-xs bg-blue-300\">\r\n                  MiddleExam\r\n                </th>\r\n                <th className=\"bg-gray-100 sticky top-0 border-b border-gray-200 px-6 py-2 text-gray-800 font-bold tracking-wider uppercase text-xs bg-blue-300\">\r\n                  Writting\r\n                </th>\r\n                <th className=\"bg-gray-100 sticky top-0 border-b border-gray-200 px-6 py-2 text-gray-800 font-bold tracking-wider uppercase text-xs bg-blue-300\">\r\n                  FinalExam\r\n                </th>\r\n                <th className=\"bg-gray-100 sticky top-0 border-b border-gray-200 px-6 py-2 text-gray-800 font-bold tracking-wider uppercase text-xs bg-blue-300\">\r\n                  Promedio\r\n                </th>\r\n                <th className=\"bg-gray-100 sticky top-0 border-b border-gray-200 px-6 py-2 text-gray-800 font-bold tracking-wider uppercase text-xs bg-blue-300\">\r\n                  Accion\r\n                </th>\r\n              </tr>\r\n              </thead>\r\n\r\n              <tbody >\r\n              {data.map((nota) => {\r\n                return (\r\n                    <tr key={nota.id} className=\"hover:bg-gray-400\">\r\n\r\n                      <td className=\"border-dashed border-t border-gray-200 \">\r\n                    <span className=\"text-gray-700 px-6 py-3 flex justify-center\">\r\n                      {`${nota.student.name} ${nota.student.lastname}`}\r\n                    </span>\r\n                      </td>\r\n\r\n                      <td className=\"border-dashed border-t border-gray-200\">\r\n                    <span className=\"text-gray-700 px-6 py-3 flex justify-center\">\r\n                    {`${nota.cycle.schedule.language.name} ${nota.cycle.schedule.language.level}`}\r\n                    </span>\r\n                      </td>\r\n                      <td className=\"border-dashed border-t border-gray-200\">\r\n                    <span className=\"text-gray-700 px-6 py-3 flex justify-center\">\r\n                    {`${nota.cycle.name}`}\r\n                    </span>\r\n                      </td>\r\n                      <td className=\"border-dashed border-t border-gray-200\">\r\n                    <span className=\"text-gray-700 px-6 py-3 flex justify-center\">\r\n                      {nota.listeningnote}\r\n                    </span>\r\n                      </td>\r\n                      <td className=\"border-dashed border-t border-gray-200\">\r\n                    <span className=\"text-gray-700 px-6 py-3 flex justify-center\">\r\n                      {nota.readingnote}\r\n                    </span>\r\n                      </td>\r\n                      <td className=\"border-dashed border-t border-gray-200\">\r\n                    <span className=\"text-gray-700 px-6 py-3 flex justify-center\">\r\n                      {nota.speakingnote}\r\n                    </span>\r\n                      </td>\r\n                      <td className=\"border-dashed border-t border-gray-200\">\r\n                    <span className=\"text-gray-700 px-6 py-3 flex justify-center\">\r\n                      {nota.middlexexamnote}\r\n                    </span>\r\n                      </td>\r\n\r\n                      <td className=\"border-dashed border-t border-gray-200\">\r\n                    <span className=\"text-gray-700 px-6 py-3 flex justify-center\">\r\n                      {nota.writingnote}\r\n                    </span>\r\n                      </td>\r\n\r\n                      <td className=\"border-dashed border-t border-gray-200\">\r\n                    <span className=\"text-gray-700 px-6 py-3 flex justify-center\">\r\n                      {nota.finalexamnote}\r\n                    </span>\r\n                      </td>\r\n\r\n                      <td className=\"border-dashed border-t border-gray-200\">\r\n                    <span className=\"text-gray-700 px-6 py-3 flex justify-center\">\r\n                      {Math.round((nota.listeningnote+\r\n                          nota.readingnote+\r\n                          nota.speakingnote+\r\n                          nota.middlexexamnote+\r\n                          nota.writingnote+\r\n                          nota.finalexamnote)/6)}\r\n                    </span>\r\n                      </td>\r\n\r\n\r\n                      <button\r\n                          className=\"bg-blue-500 hover:bg-blue-100 text-gray-800 font-bold py-2 px-4 rounded inline-flex items-center\"\r\n\r\n                          onClick={() => history.push(`/notes/${nota.id}`)}\r\n                      >\r\n                        <span>Editar</span>\r\n                      </button>\r\n\r\n                    </tr>\r\n                );\r\n              })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default NotaPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Loading from \"../../components/Loading\";\r\nimport { ICycle } from \"../../interfaces/ICycle\";\r\nimport { IStudent } from \"../../interfaces/IStudent\";\r\nimport {ICreateNote} from \"../../interfaces/INotas\";\r\nimport {getAllStudentAndCycles, RegistrarNotaAPI} from \"../../helpers/notas\";\r\n\r\nconst NewNotaPage = () => {\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [students, setStudents] = useState(new Array<IStudent>());\r\n  const [cycles, setCycles] = useState(new Array<ICycle>());\r\n  const [nota, setNota] = useState<ICreateNote>({\r\n    writingnote: 0,\r\n    listeningnote: 0,\r\n    readingnote: 0,\r\n    speakingnote: 0,\r\n    middlexexamnote: 0,\r\n    finalexamnote: 0,\r\n    cycle_id: 0,\r\n    student_id: 0,\r\n  });\r\n\r\n  const allStudentsAndCycles = () => {\r\n    getAllStudentAndCycles()\r\n      .then((res) => {\r\n        setStudents(res.data.students);\r\n        setCycles(res.data.cycles);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\r\n          error.response ? error.response.data.message : \"Error de Servidor\"\r\n        );\r\n      });\r\n  };\r\n\r\n  const isValid = (): boolean => {\r\n    if (nota.student_id === 0) {\r\n      toast.warn(\"Asigne un Estudiante\");\r\n      return false;\r\n    } else if (nota.cycle_id === 0) {\r\n      toast.warn(\"Asigne un Ciclo\");\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const onSubmit = (e: any) => {\r\n    e.preventDefault();\r\n    if (isValid()) {\r\n      setLoading(true);\r\n      RegistrarNotaAPI(nota)\r\n        .then((res) => {\r\n          toast.success(res.data.message);\r\n          history.push(\"/notes\");\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          toast.error(\r\n            error.response ? error.response.data.message : \"Error de Servidor\"\r\n          );\r\n          setLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const init = () => {\r\n      allStudentsAndCycles();\r\n    };\r\n    init();\r\n  }, []);\r\n\r\n  return (\r\n      <Layout text=\"Ciclos\" head=\"Creación de Nota\">\r\n        <Loading loading={loading} />\r\n        <div className=\"leading-loose\">\r\n          <h1 className=\"text-4xl py-0 text-center\">Registrar Nota</h1>\r\n\r\n          <form\r\n              className=\"max-w-xl m-4 p-10 bg-red-400 rounded shadow-xl container mx-auto\"\r\n              onSubmit={onSubmit}\r\n              noValidate\r\n          >\r\n\r\n              <div className=\"mt-2\">\r\n              <label className=\"block text-sm text-gray-00\">Estudiante</label>\r\n              <div className=\"relative\">\r\n                <select\r\n                    className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n                    id=\"grid-state\"\r\n                    onChange={(e: any) =>\r\n                        setNota({\r\n                          ...nota,\r\n                          student_id: Number(e.target.value),\r\n                        })\r\n                    }\r\n                    value={nota.student_id}\r\n                >\r\n                  <option value={0}>Seleccionar Alumno</option>\r\n                  {students.map((student) => (\r\n                      <option\r\n                          key={student.id}\r\n                          value={student.id}\r\n                      >{`${student.name} ${student.lastname} - ${student.university_id ? student.university_id : 'Externo'}`}</option>\r\n                  ))}\r\n                </select>\r\n                <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                  <svg\r\n                      className=\"fill-current h-4 w-4\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 20 20\"\r\n                  >\r\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-2\">\r\n              <label className=\"block text-sm text-gray-00\">Ciclo</label>\r\n              <div className=\"relative\">\r\n                <select\r\n                    className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n                    id=\"grid-state\"\r\n                    onChange={(e: any) =>\r\n                        setNota({\r\n                          ...nota,\r\n                          cycle_id: Number(e.target.value),\r\n                        })\r\n                    }\r\n                    value={nota.cycle_id}\r\n                >\r\n                  <option value={0}>Seleccionar Ciclo</option>\r\n                  {cycles.map((cycle) => (\r\n                      <option\r\n                          key={cycle.id}\r\n                          value={cycle.id}\r\n                      >{`${cycle.schedule.language.name} ${cycle.schedule.language.level} ${cycle.name}`} </option>\r\n                  ))}\r\n                </select>\r\n                <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                  <svg\r\n                      className=\"fill-current h-4 w-4\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 20 20\"\r\n                  >\r\n                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Listening</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                  id=\"listening\"\r\n                  name=\"listening\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        listeningnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.listeningnote}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Reading</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                  id=\"reading\"\r\n                  name=\"reading\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        readingnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.readingnote}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Speaking</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                  id=\"speaking\"\r\n                  name=\"speaking\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        speakingnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.speakingnote}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Middle Exam</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                  id=\"middle\"\r\n                  name=\"middle\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        middlexexamnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.middlexexamnote}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Writting</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                  id=\"writting\"\r\n                  name=\"writting\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        writingnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.writingnote}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm text-gray-00\">Nota Final Exam</label>\r\n              <input\r\n                  className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                  id=\"final\"\r\n                  name=\"final\"\r\n                  type=\"number\"\r\n                  step=\"0.01\"\r\n                  required\r\n                  onChange={(e: any) =>\r\n                      setNota({\r\n                        ...nota,\r\n                        finalexamnote: Number(e.target.value),\r\n                      })}\r\n                  //value={nota.finalexamnote}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"mt-4 text-center\">\r\n                <button\r\n                    className=\"bg-black hover:bg-gray-800 font-light tracking-wider text-white font-bold py-1 px-4 rounded inline-flex items-center\"\r\n                    onClick={() => history.push(\"/notes\")}\r\n                >\r\n                    Volver\r\n                </button>\r\n\r\n              <button\r\n                  className=\"bg-black hover:bg-gray-800 text-white font-bold py-1 px-4 mx-4 rounded inline-flex items-center\"\r\n                  type=\"submit\"\r\n              >\r\n                Registrar\r\n              </button>\r\n            </div>\r\n\r\n          </form>\r\n\r\n        </div>\r\n      </Layout>\r\n  );\r\n};\r\n\r\nexport default NewNotaPage;\r\n","import {useHistory, useParams} from \"react-router-dom\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {ICreateNote} from \"../../interfaces/INotas\";\r\nimport {\r\n    actualizarNotaAPI,\r\n    getAllStudentAndCycles,\r\n    getNoteById,\r\n} from \"../../helpers/notas\";\r\nimport {toast} from \"react-toastify\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Loading from \"../../components/Loading\";\r\nimport {IStudent} from \"../../interfaces/IStudent\";\r\nimport {ICycle} from \"../../interfaces/ICycle\";\r\n\r\nconst EditPage = () => {\r\n    const history = useHistory();\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [students, setStudents] = useState(new Array<IStudent>());\r\n    const [cycles, setCycles] = useState(new Array<ICycle>());\r\n\r\n    let {id} = useParams();\r\n    const [nota, setNota] = useState<ICreateNote>({\r\n        writingnote: 0,\r\n        listeningnote: 0,\r\n        readingnote: 0,\r\n        speakingnote: 0,\r\n        middlexexamnote: 0,\r\n        finalexamnote: 0,\r\n        cycle_id: 0,\r\n        student_id: 0,\r\n    });\r\n\r\n    const loadList = () => {\r\n        setLoading(true);\r\n        getNoteById(id)\r\n            .then((res) => {\r\n                setNota(res.data);\r\n                setLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                toast.error(\r\n                    error.response ? error.response.data.message : \"Error de Servidor\"\r\n                );\r\n                setLoading(false);\r\n            });\r\n    };\r\n\r\n    const allStudentsAndCycles = () => {\r\n        getAllStudentAndCycles()\r\n            .then((res) => {\r\n                setStudents(res.data.students);\r\n                setCycles(res.data.cycles);\r\n            })\r\n            .catch((error) => {\r\n                toast.error(\r\n                    error.response ? error.response.data.message : \"Error de Servidor\"\r\n                );\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        const init = () => loadList();\r\n        init();\r\n        allStudentsAndCycles();\r\n    }, []);\r\n\r\n    const onSubmit = (e: any) => {\r\n        e.preventDefault();\r\n        if (isValid()) {\r\n            setLoading(true);\r\n            actualizarNotaAPI(nota)\r\n                .then((res) => {\r\n                    toast.success(res.data.message);\r\n                    history.push(\"/notes\");\r\n                    setLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    toast.error(\r\n                        error.response ? error.response.data.message : \"Error de Servidor\"\r\n                    );\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    const isValid = (): boolean => {\r\n        if (nota.student_id === 0) {\r\n            toast.warn(\"Asigne un Estudiante\");\r\n            return false;\r\n        } else if (nota.cycle_id === 0) {\r\n            toast.warn(\"Asigne un Ciclo\");\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        <Layout text=\"Ciclos\" head=\"Actualizar Nota\">\r\n            <Loading loading={loading} />\r\n            <div className=\"leading-loose\">\r\n                <h1 className=\"text-4xl py-0 text-center\">Actualizar Nota</h1>\r\n\r\n                <form\r\n                    className=\"max-w-xl m-4 p-10 bg-red-400 rounded shadow-xl container mx-auto\"\r\n                    onSubmit={onSubmit}\r\n                    noValidate\r\n                >\r\n\r\n                    <div className=\"mt-2\">\r\n                        <label className=\"block text-sm text-gray-00\">Estudiante</label>\r\n                        <div className=\"relative\">\r\n                            <select\r\n                                className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n                                id=\"grid-state\"\r\n                                aria-readonly\r\n                                value={nota.student_id}\r\n                            >\r\n                                <option value={0}>Seleccionar Alumno</option>\r\n                                {students.map((student) => (\r\n                                    <option\r\n                                        key={student.id}\r\n                                        value={student.id}\r\n                                    >{`${student.name} ${student.lastname} - ${student.university_id ? student.university_id : 'Externo'}`}</option>\r\n                                ))}\r\n                            </select>\r\n                            <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                                <svg\r\n                                    className=\"fill-current h-4 w-4\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    viewBox=\"0 0 20 20\"\r\n                                >\r\n                                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"mt-2\">\r\n                        <label className=\"block text-sm text-gray-00\">Ciclo</label>\r\n                        <div className=\"relative\">\r\n                            <select\r\n                                className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\r\n                                id=\"grid-state\"\r\n                                aria-readonly\r\n                                value={nota.cycle_id}\r\n                            >\r\n                                <option value={0}>Seleccionar Ciclo</option>\r\n                                {cycles.map((cycle) => (\r\n                                    <option\r\n                                        key={cycle.id}\r\n                                        value={cycle.id}\r\n                                    >{`${cycle.schedule.language.name} ${cycle.schedule.language.level} ${cycle.name}`} </option>\r\n                                ))}\r\n                            </select>\r\n                            <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700\">\r\n                                <svg\r\n                                    className=\"fill-current h-4 w-4\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    viewBox=\"0 0 20 20\"\r\n                                >\r\n                                    <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Listening</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                            id=\"listening\"\r\n                            name=\"listening\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    listeningnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.listeningnote}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Reading</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                            id=\"reading\"\r\n                            name=\"reading\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    readingnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.readingnote}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Speaking</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-300 rounded\"\r\n                            id=\"speaking\"\r\n                            name=\"speaking\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    speakingnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.speakingnote}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Middle Exam</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                            id=\"middle\"\r\n                            name=\"middle\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    middlexexamnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.middlexexamnote}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Writting</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                            id=\"writting\"\r\n                            name=\"writting\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    writingnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.writingnote}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className=\"block text-sm text-gray-00\">Nota Final Exam</label>\r\n                        <input\r\n                            className=\"w-full px-5 py-2 text-gray-700 bg-gray-200 rounded\"\r\n                            id=\"final\"\r\n                            name=\"final\"\r\n                            type=\"number\"\r\n                            step=\"0.01\"\r\n                            required\r\n                            onChange={(e: any) =>\r\n                                setNota({\r\n                                    ...nota,\r\n                                    finalexamnote: Number(e.target.value),\r\n                                })}\r\n                            value={nota.finalexamnote}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"mt-4 text-center\">\r\n                        <button\r\n                            className=\"bg-black hover:bg-gray-800 font-light tracking-wider text-white font-bold py-1 px-4 rounded inline-flex items-center\"\r\n                            onClick={() => history.push(\"/notes\")}\r\n                        >\r\n                            Volver\r\n                        </button>\r\n\r\n                        <button\r\n                            className=\"bg-black hover:bg-gray-800 text-white font-bold py-1 px-4 mx-4 rounded inline-flex items-center\"\r\n                            type=\"submit\"\r\n                        >\r\n                            Actualizar\r\n                        </button>\r\n                    </div>\r\n\r\n                </form>\r\n\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default EditPage;\r\n","import React from \"react\";\r\nimport {Route, Switch, useRouteMatch, Redirect} from \"react-router-dom\";\r\nimport NotaPage from \"../pages/notas\";\r\nimport NewNotaPage from \"../pages/notas/new\";\r\nimport EditPage from \"../pages/notas/edit\";\r\n\r\nconst NotaRoute = () => {\r\n    const { path } = useRouteMatch();\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path={`${path}`} exact component={NotaPage} />\r\n            <Route path={`${path}/new`} exact component={NewNotaPage} />\r\n            <Route path={`${path}/:id`} exact component={EditPage} />\r\n            <Redirect to={`${path}`} />\r\n        </Switch>\r\n    );\r\n\r\n}\r\n\r\nexport default NotaRoute;\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router, Switch, Redirect, Route} from \"react-router-dom\";\r\nimport NotaRoute from \"./NotaRoute\";\r\n\r\n\r\nconst AppRoute = () => {\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route\r\n          path=\"/notes\"\r\n          component={NotaRoute}\r\n        />\r\n        <Redirect to=\"/notes\" />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRoute;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {toast, ToastContainer, Zoom} from \"react-toastify\";\r\n\r\nimport AppRoute from \"./routers/AppRoute\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport \"./styles/main.css\";\r\nimport \"./styles/global.css\";\r\n\r\nReactDOM.render(\r\n  <>\r\n    <ToastContainer\r\n      autoClose={5000}\r\n      limit={4}\r\n      closeOnClick={false}\r\n      position={toast.POSITION.BOTTOM_CENTER}\r\n      transition={Zoom}\r\n    />\r\n    <AppRoute/>\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}